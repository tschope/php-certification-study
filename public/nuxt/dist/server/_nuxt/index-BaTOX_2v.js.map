{"version":3,"file":"index-BaTOX_2v.js","sources":["../../../../../frontend/pages/index.vue"],"sourcesContent":["<template>\n    <div class=\"flex flex-col items-center justify-center min-h-screen bg-gray-100 px-4\">\n        <!-- Título -->\n        <h1 class=\"text-4xl font-bold mb-4 text-center\">\n            PHP Certification Study\n        </h1>\n        <!-- Logo -->\n        <img\n            src=\"@/assets/images/logo.png\"\n            alt=\"Logo\"\n            class=\"w-[460px] h-[180px] mb-4\"\n        />\n        <!-- Descrição -->\n        <p class=\"text-lg text-gray-700 mb-8 text-center max-w-2xl\">\n            This website helps you stay updated about your Irish Passport application.\n            Enter your Application ID, Email, choose the times you'd like to receive notifications,\n            and let us keep you informed via email updates.\n        </p>\n        <!-- Mensagem de sucesso ou erro -->\n        <div v-if=\"message.text\" :class=\"messageClass\" class=\"w-full max-w-md text-center p-4 mb-4 rounded-lg\">\n            {{ message.text }}\n        </div>\n        <!-- Formulário -->\n        <form @submit.prevent=\"handleSubmit\" class=\"bg-white shadow-md rounded-lg p-6 w-full max-w-md\">\n            <!-- Loading -->\n            <div v-if=\"loading\" class=\"text-blue-500 text-center mb-4\">Processing your request...</div>\n            <!-- Application ID -->\n            <div class=\"mb-4\">\n                <label for=\"applicationId\" class=\"block text-gray-700 font-medium mb-2\">\n                    Application ID\n                </label>\n                <input\n                    v-model=\"form.applicationId\"\n                    type=\"text\"\n                    id=\"applicationId\"\n                    placeholder=\"Enter your Application ID\"\n                    :disabled=\"loading\"\n                    class=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring focus:ring-blue-200 disabled:bg-gray-200\"\n                    required\n                />\n            </div>\n            <!-- E-mail -->\n            <div class=\"mb-4\">\n                <label for=\"email\" class=\"block text-gray-700 font-medium mb-2\">\n                    E-mail\n                </label>\n                <input\n                    v-model=\"form.email\"\n                    type=\"email\"\n                    id=\"email\"\n                    placeholder=\"Enter your email\"\n                    :disabled=\"loading\"\n                    class=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring focus:ring-blue-200 disabled:bg-gray-200\"\n                    required\n                />\n            </div>\n            <!-- Horários -->\n            <div class=\"mb-4\">\n                <p class=\"text-gray-700 font-medium mb-2\">\n                    What time(s) would you like to receive notifications?\n                </p>\n                <div v-for=\"(time, index) in times\" :key=\"index\" class=\"mb-2\">\n                    <input\n                        type=\"checkbox\"\n                        :value=\"time\"\n                        v-model=\"form.selectedTimes\"\n                        :disabled=\"loading || (form.selectedTimes.length >= 2 && !form.selectedTimes.includes(time))\"\n                        id=\"time-{{ index }}\"\n                    />\n                    <label :for=\"'time-' + index\" class=\"ml-2 text-gray-600\">\n                        {{ time }}\n                    </label>\n                </div>\n                <p v-if=\"form.selectedTimes.length > 2\" class=\"text-red-500 text-sm mt-1\">\n                    You can select a maximum of 2 times.\n                </p>\n            </div>\n            <!-- Receber aos finais de semana -->\n            <div class=\"mb-6\">\n                <input type=\"checkbox\" v-model=\"form.weekends\" id=\"weekends\" :disabled=\"loading\" />\n                <label for=\"weekends\" class=\"ml-2 text-gray-700\">\n                    Receive notifications on weekends?\n                </label>\n            </div>\n            <!-- Botão de enviar -->\n            <button\n                type=\"submit\"\n                :disabled=\"loading\"\n                class=\"w-full bg-blue-500 text-white font-bold py-2 px-4 rounded-lg hover:bg-blue-600 transition-colors disabled:bg-gray-400\"\n            >\n                Submit\n            </button>\n        </form>\n        <div class=\"mt-4\">\n            <p class=\"text-sm text-gray-600\">\n                <a\n                    @click.prevent=\"navigateToUnsubscribe\"\n                    class=\"text-blue-500 hover:underline cursor-pointer\"\n                >\n                    Unsubscribe\n                </a>\n                <a\n                    @click.prevent=\"navigateToPrivacy\"\n                    class=\"text-blue-500 hover:underline cursor-pointer\"\n                >\n                    Privacy Policy\n                </a>\n            </p>\n        </div>\n    </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\nimport { useFetch, useRuntimeConfig } from '#app';\n\nconst form = ref({\n    applicationId: '',\n    email: '',\n    selectedTimes: [],\n    weekends: false,\n});\n\nconst message = ref({\n    text: '',\n    type: '', // 'success' ou 'error'\n});\n\nconst times = ['8:00', '10:00', '13:00', '16:00', '18:00']; // Opções de horários\n\nconst loading = ref(false);\n\nconst config = useRuntimeConfig();\n\nconst messageClass = computed(() => {\n    return message.value.type === 'success'\n        ? 'bg-green-100 text-green-700 border border-green-500'\n        : 'bg-red-100 text-red-700 border border-red-500';\n});\n\nconst formatTime = (time) => {\n    const [hours, minutes] = time.split(':');\n    return `${String(hours).padStart(2, '0')}:${minutes}`;\n};\n\nconst handleSubmit = async () => {\n    if (form.value.selectedTimes.length > 2) {\n        message.value = {\n            text: 'You can select a maximum of 2 times.',\n            type: 'error',\n        };\n        return;\n    }\n\n    loading.value = true;\n    message.value.text = '';\n\n    try {\n        const response = await fetch(`${config.public.apiBase}/application-email`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n            },\n            body: JSON.stringify({\n                applicationId: form.value.applicationId,\n                email: form.value.email,\n                send_time_1: formatTime(form.value.selectedTimes[0] || '00:00'),\n                send_time_2: formatTime(form.value.selectedTimes[1] || '00:00'),\n                weekends: form.value.weekends,\n            }),\n        });\n\n        if (!response.ok) {\n            const errorData = await response.json();\n            message.value = {\n                text: errorData.message || 'An unexpected error occurred. Please try again later.',\n                type: 'error',\n            };\n            return;\n        }\n\n        message.value = {\n            text: 'Your application was submitted successfully!',\n            type: 'success',\n        };\n        resetForm();\n    } catch (err) {\n        message.value = {\n            text: 'An unexpected error occurred. Please try again later.',\n            type: 'error',\n        };\n    } finally {\n        loading.value = false;\n    }\n};\n\nconst resetForm = () => {\n    form.value.applicationId = '';\n    form.value.email = '';\n    form.value.selectedTimes = [];\n    form.value.weekends = false;\n};\n\nconst navigateToUnsubscribe = () => {\n    navigateTo('/unsubscribe')\n};\nconst navigateToPrivacy = () => {\n    navigateTo('/privacy')\n};\n</script>\n\n<style scoped>\nform {\n    background-color: #f9fafb;\n}\n\nbutton:focus {\n    outline: none;\n}\n</style>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAoHA,UAAM,OAAO,IAAI;AAAA,MACb,eAAe;AAAA,MACf,OAAO;AAAA,MACP,eAAe,CAAE;AAAA,MACjB,UAAU;AAAA,IACd,CAAC;AAED,UAAM,UAAU,IAAI;AAAA,MAChB,MAAM;AAAA,MACN,MAAM;AAAA;AAAA,IACV,CAAC;AAED,UAAM,QAAQ,CAAC,QAAQ,SAAS,SAAS,SAAS,OAAO;AAEzD,UAAM,UAAU,IAAI,KAAK;AAIzB,UAAM,eAAe,SAAS,MAAM;AAChC,aAAO,QAAQ,MAAM,SAAS,YACxB,wDACA;AAAA,IACV,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
