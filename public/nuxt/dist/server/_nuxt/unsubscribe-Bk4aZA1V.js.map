{"version":3,"file":"unsubscribe-Bk4aZA1V.js","sources":["../../../../../frontend/pages/unsubscribe.vue"],"sourcesContent":["<template>\n    <div class=\"flex flex-col items-center justify-center min-h-screen bg-gray-100 px-4\">\n        <h1 class=\"text-4xl font-bold text-center mb-4\">\n            Unsubscribe from Notifications\n        </h1>\n        <p class=\"text-lg text-center mb-8\">\n            Enter your Application ID and Email to unsubscribe from status notifications.\n        </p>\n        <img\n            src=\"@/assets/images/logo.png\"\n            alt=\"Logo\"\n            class=\"w-[460px] h-[180px] mb-4\"\n        />\n        <!-- Mensagem de sucesso ou erro -->\n        <div v-if=\"message.text\" :class=\"messageClass\" class=\"w-full max-w-md text-center p-4 mb-4 rounded-lg\">\n            {{ message.text }}\n        </div>\n        <form\n            class=\"w-full max-w-md bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\"\n            @submit.prevent=\"handleUnsubscribe\"\n        >\n            <!-- Loading -->\n            <div v-if=\"loading\" class=\"text-blue-500 text-center mb-4\">Processing your request...</div>\n            <div class=\"mb-4\">\n                <label\n                    class=\"block text-gray-700 text-sm font-bold mb-2\"\n                    for=\"applicationId\"\n                >\n                    Application ID\n                </label>\n                <input\n                    type=\"text\"\n                    id=\"applicationId\"\n                    v-model=\"form.applicationId\"\n                    class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                    placeholder=\"Enter your Application ID\"\n                    :disabled=\"loading\"\n                    required\n                />\n            </div>\n\n            <div class=\"mb-4\">\n                <label\n                    class=\"block text-gray-700 text-sm font-bold mb-2\"\n                    for=\"email\"\n                >\n                    Email\n                </label>\n                <input\n                    type=\"email\"\n                    id=\"email\"\n                    v-model=\"form.email\"\n                    class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                    placeholder=\"Enter your Email\"\n                    :disabled=\"loading\"\n                    required\n                />\n            </div>\n\n            <div class=\"flex items-center justify-between\">\n                <button\n                    type=\"submit\"\n                    :disabled=\"loading\"\n                    class=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n                >\n                    Unsubscribe\n                </button>\n            </div>\n        </form>\n        <div class=\"mt-4\">\n            <p class=\"text-sm text-gray-600\">\n                <a\n                    @click.prevent=\"navigateToHome\"\n                    class=\"text-blue-500 hover:underline cursor-pointer\"\n                >\n                    Home\n                </a>\n            </p>\n        </div>\n    </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\nimport { useRuntimeConfig } from '#app';\n\nconst form = ref({\n    applicationId: '',\n    email: '',\n});\n\nconst message = ref({ text: '', type: '' });\nconst loading = ref(false);\n\nconst messageClass = computed(() => {\n    return message.value.type === 'success'\n        ? 'bg-green-100 text-green-700 border border-green-500'\n        : 'bg-red-100 text-red-700 border border-red-500';\n});\n\nconst config = useRuntimeConfig();\n\nconst handleUnsubscribe = async () => {\n    loading.value = true;\n    try {\n        const response = await $fetch(`${config.public.apiBase}/unsubscribe`, {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n            },\n            method: 'POST',\n            body: {\n                applicationId: form.value.applicationId,\n                email: form.value.email,\n            },\n        });\n\n        if (response.success) {\n            message.value = { text: 'You have successfully unsubscribed. Redirecting to the home page...', type: 'success' };\n\n            // Redireciona para a página inicial após 5 segundos\n            setTimeout(() => {\n                navigateTo('/');\n            }, 5000);\n        } else {\n            throw new Error(response.message || 'Unsubscription failed');\n        }\n    } catch (error) {\n        // Verifica se o erro contém uma resposta estruturada antes de acessar message\n        const errorMessage = error?.response?.data?.message || error.message || 'An error occurred while unsubscribing.';\n        message.value = { text: errorMessage, type: 'error' };\n    } finally {\n        loading.value = false;\n    }\n};\n\nconst navigateToHome = () => {\n    navigateTo('/')\n};\n</script>\n\n<style scoped>\nform {\n    background-color: #f9fafb;\n}\n\nbutton:focus {\n    outline: none;\n}\n</style>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAsFA,UAAM,OAAO,IAAI;AAAA,MACb,eAAe;AAAA,MACf,OAAO;AAAA,IACX,CAAC;AAED,UAAM,UAAU,IAAI,EAAE,MAAM,IAAI,MAAM,IAAI;AAC1C,UAAM,UAAU,IAAI,KAAK;AAEzB,UAAM,eAAe,SAAS,MAAM;AAChC,aAAO,QAAQ,MAAM,SAAS,YACxB,wDACA;AAAA,IACV,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;"}